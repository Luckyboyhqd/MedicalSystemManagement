[main]
authc.loginUrl=/
;这里的配置为authc验证没通过请求的路径  loginUrl为一个属性名 org.apache.shiro.web.filter.authc.FormAuthenticationFilter类中
roles.unauthorizedUrl=/index.html
;roles 角色认证未通过去请求的Url  在org.apache.shiro.web.filter.authz.AuthorizationFilter可以看到unauthorizedUrl这个属性
perms.unauthorizedUrl=/index.html
;权限认证未通过


MyRealm=cn.wengsj.mms.shiro.MyRealm
;;内置对象  可以写多个，用逗号隔开
securityManager.realms=$MyRealm

LoginFilter = cn.wengsj.mms.shiro.LoginFilter
LoginFilter.loginUrl = /isLogin.manager

logout.redirectUrl=/

RoleFilter = cn.wengsj.mms.shiro.RoleFilter

[urls]
/admin*=authc
;会进行身份验证   authc 对应的是过滤器

/isLogin.manager=LoginFilter
;;权限拦截是有顺序的，需要先进行身份验证(也就是登录成功)，也就是登录后才有权限角色等认证

/role.manager=authc
/logout.manager=logout
;退出

/update.drug=RoleFilter[admin]
/add.drug=RoleFilter[admin]
/delete.drug=RoleFilter[admin]
/delete.medicineType=RoleFilter[admin]
/edit.medicineType=RoleFilter[admin]
/add.medicineType=RoleFilter[admin]
/list.salelog=RoleFilter[admin]
/list.manager=RoleFilter[admin]